/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OZT } from "../OZT";

export class OZT__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OZT> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<OZT>;
  }
  getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  attach(address: string): OZT {
    return super.attach(address) as OZT;
  }
  connect(signer: Signer): OZT__factory {
    return super.connect(signer) as OZT__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OZT {
    return new Contract(address, _abi, signerOrProvider) as OZT;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200109b3803806200109b8339810160408190526200003491620002ab565b8151829082906200004d9060039060208501906200015a565b508051620000639060049060208401906200015a565b505050620000793360006200008160201b60201c565b5050620003ca565b6001600160a01b038216620000b35760405162461bcd60e51b8152600401620000aa9062000312565b60405180910390fd5b620000c16000838362000155565b8060026000828254620000d5919062000352565b90915550506001600160a01b038216600090815260208190526040812080548392906200010490849062000352565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200014990859062000349565b60405180910390a35050565b505050565b828054620001689062000377565b90600052602060002090601f0160209004810192826200018c5760008555620001d7565b82601f10620001a757805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d7578251825591602001919060010190620001ba565b50620001e5929150620001e9565b5090565b5b80821115620001e55760008155600101620001ea565b600082601f83011262000211578081fd5b81516001600160401b03808211156200022e576200022e620003b4565b6040516020601f8401601f1916820181018381118382101715620002565762000256620003b4565b60405283825285840181018710156200026d578485fd5b8492505b8383101562000290578583018101518284018201529182019162000271565b83831115620002a157848185840101525b5095945050505050565b60008060408385031215620002be578182fd5b82516001600160401b0380821115620002d5578384fd5b620002e38683870162000200565b93506020850151915080821115620002f9578283fd5b50620003088582860162000200565b9150509250929050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200037257634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200038c57607f821691505b60208210811415620003ae57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610cc180620003da6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b411461019b578063a457c2d7146101a3578063a9059cbb146101b6578063dd62ed3e146101c9576100cf565b806340c10f191461016257806342966c681461017557806370a0823114610188576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101dc565b6040516100e99190610906565b60405180910390f35b6101056101003660046108ba565b61026e565b6040516100e991906108fb565b61011a61028b565b6040516100e99190610bf4565b61010561013536600461087f565b610291565b610142610331565b6040516100e99190610bfd565b61010561015d3660046108ba565b610336565b6101056101703660046108ba565b610385565b6101056101833660046108e3565b610391565b61011a61019636600461082c565b6103a6565b6100dc6103c1565b6101056101b13660046108ba565b6103d0565b6101056101c43660046108ba565b61044b565b61011a6101d736600461084d565b61045f565b6060600380546101eb90610c3a565b80601f016020809104026020016040519081016040528092919081815260200182805461021790610c3a565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b5050505050905090565b600061028261027b61048a565b848461048e565b50600192915050565b60025490565b600061029e848484610542565b6001600160a01b0384166000908152600160205260408120816102bf61048a565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030b5760405162461bcd60e51b815260040161030290610a66565b60405180910390fd5b6103268561031761048a565b6103218685610c23565b61048e565b506001949350505050565b600890565b600061028261034361048a565b84846001600061035161048a565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103219190610c0b565b6000610282838361066a565b600061039d338361072a565b5060015b919050565b6001600160a01b031660009081526020819052604090205490565b6060600480546101eb90610c3a565b600080600160006103df61048a565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561042b5760405162461bcd60e51b815260040161030290610b78565b61044161043661048a565b856103218685610c23565b5060019392505050565b600061028261045861048a565b8484610542565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104b45760405162461bcd60e51b815260040161030290610b34565b6001600160a01b0382166104da5760405162461bcd60e51b8152600401610302906109de565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610535908590610bf4565b60405180910390a3505050565b6001600160a01b0383166105685760405162461bcd60e51b815260040161030290610aef565b6001600160a01b03821661058e5760405162461bcd60e51b815260040161030290610959565b610599838383610810565b6001600160a01b038316600090815260208190526040902054818110156105d25760405162461bcd60e51b815260040161030290610a20565b6105dc8282610c23565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610612908490610c0b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161065c9190610bf4565b60405180910390a350505050565b6001600160a01b0382166106905760405162461bcd60e51b815260040161030290610bbd565b61069c60008383610810565b80600260008282546106ae9190610c0b565b90915550506001600160a01b038216600090815260208190526040812080548392906106db908490610c0b565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061071e908590610bf4565b60405180910390a35050565b6001600160a01b0382166107505760405162461bcd60e51b815260040161030290610aae565b61075c82600083610810565b6001600160a01b038216600090815260208190526040902054818110156107955760405162461bcd60e51b81526004016103029061099c565b61079f8282610c23565b6001600160a01b038416600090815260208190526040812091909155600280548492906107cd908490610c23565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610535908690610bf4565b505050565b80356001600160a01b03811681146103a157600080fd5b60006020828403121561083d578081fd5b61084682610815565b9392505050565b6000806040838503121561085f578081fd5b61086883610815565b915061087660208401610815565b90509250929050565b600080600060608486031215610893578081fd5b61089c84610815565b92506108aa60208501610815565b9150604084013590509250925092565b600080604083850312156108cc578182fd5b6108d583610815565b946020939093013593505050565b6000602082840312156108f4578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093257858101830151858201604001528201610916565b818111156109435783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c1e57610c1e610c75565b500190565b600082821015610c3557610c35610c75565b500390565b600281046001821680610c4e57607f821691505b60208210811415610c6f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bb1a70c58383517eb04381bc683c7306b3c1628a9ebcdfd7e35171008286a28964736f6c63430008000033";
