/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OwnedUpgradeabilityProxy } from "../OwnedUpgradeabilityProxy";

export class OwnedUpgradeabilityProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnedUpgradeabilityProxy> {
    return super.deploy(overrides || {}) as Promise<OwnedUpgradeabilityProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnedUpgradeabilityProxy {
    return super.attach(address) as OwnedUpgradeabilityProxy;
  }
  connect(signer: Signer): OwnedUpgradeabilityProxy__factory {
    return super.connect(signer) as OwnedUpgradeabilityProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnedUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnedUpgradeabilityProxy;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maintenance",
    outputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    name: "setMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610043565b7fc14ae86c95cd41987f6cc2a8db7c9dd3f6073fb94c9ba01df6a007822b9aec1e55565b610799806100526000396000f3fe6080604052600436106100745760003560e01c80635c60da1b1161004e5780635c60da1b146100e9578063612f2f37146100fe5780636c376cc51461011e578063f1739cae1461014057610083565b8063025313a21461008b5780633659cfe6146100b65780634f1ef286146100d657610083565b3661008357610081610160565b005b610081610160565b34801561009757600080fd5b506100a0610205565b6040516100ad9190610690565b60405180910390f35b3480156100c257600080fd5b506100816100d1366004610562565b61022a565b6100816100e4366004610583565b61026e565b3480156100f557600080fd5b506100a0610332565b34801561010a57600080fd5b50610081610119366004610637565b610357565b34801561012a57600080fd5b506101336103b3565b6040516100ad91906106be565b34801561014c57600080fd5b5061008161015b366004610562565b6103d8565b6101686103b3565b156101ae57610175610205565b6001600160a01b0316336001600160a01b0316146101ae5760405162461bcd60e51b81526004016101a59061070a565b60405180910390fd5b60006101b8610332565b90506001600160a01b0381166101e05760405162461bcd60e51b81526004016101a5906106c9565b60405136600082376000803683855af43d806000843e818015610201578184f35b8184fd5b7fc14ae86c95cd41987f6cc2a8db7c9dd3f6073fb94c9ba01df6a007822b9aec1e5490565b610232610205565b6001600160a01b0316336001600160a01b0316146102625760405162461bcd60e51b81526004016101a59061070a565b61026b8161047f565b50565b610276610205565b6001600160a01b0316336001600160a01b0316146102a65760405162461bcd60e51b81526004016101a59061070a565b6102af8261022a565b6000306001600160a01b031634836040516102ca9190610657565b60006040518083038185875af1925050503d8060008114610307576040519150601f19603f3d011682016040523d82523d6000602084013e61030c565b606091505b505090508061032d5760405162461bcd60e51b81526004016101a5906106c9565b505050565b7f827548d61fc05e7b124e6792581727d47559f60d31a18bc4b3c5d380ed37fcbb5490565b61035f610205565b6001600160a01b0316336001600160a01b03161461038f5760405162461bcd60e51b81526004016101a59061070a565b7f1d26359fc379ae94671ef52232c10cb9cdcfe5fa0cde4283e4be5a7e12aa22af55565b7f1d26359fc379ae94671ef52232c10cb9cdcfe5fa0cde4283e4be5a7e12aa22af5490565b6103e0610205565b6001600160a01b0316336001600160a01b0316146104105760405162461bcd60e51b81526004016101a59061070a565b6001600160a01b0381166104365760405162461bcd60e51b81526004016101a5906106c9565b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd961045f610205565b8260405161046e9291906106a4565b60405180910390a161026b816104fe565b6000610489610332565b9050816001600160a01b0316816001600160a01b031614156104bd5760405162461bcd60e51b81526004016101a5906106c9565b6104c682610522565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b7fc14ae86c95cd41987f6cc2a8db7c9dd3f6073fb94c9ba01df6a007822b9aec1e55565b7f827548d61fc05e7b124e6792581727d47559f60d31a18bc4b3c5d380ed37fcbb55565b80356001600160a01b038116811461055d57600080fd5b919050565b600060208284031215610573578081fd5b61057c82610546565b9392505050565b60008060408385031215610595578081fd5b61059e83610546565b915060208084013567ffffffffffffffff808211156105bb578384fd5b818601915086601f8301126105ce578384fd5b8135818111156105e0576105e061074d565b604051601f8201601f19168101850183811182821017156106035761060361074d565b6040528181528382018501891015610619578586fd5b81858501868301378585838301015280955050505050509250929050565b600060208284031215610648578081fd5b8135801515811461057c578182fd5b60008251815b81811015610677576020818601810151858301520161065d565b818111156106855782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b60208082526021908201527f4f776e6564557067726164656162696c69747950726f78793a20494e56414c496040820152601160fa1b606082015260800190565b60208082526023908201527f4f776e6564557067726164656162696c69747950726f78793a20464f524249446040820152622222a760e91b606082015260800190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f2a9012e1d05e3b48f4a837e3bcc9859624febaf920bb5c62b2cca33f502bba764736f6c63430008000033";
